pr:
  paths:
    exclude:
      - docs/*
      - .pre-commit-config.yaml

jobs:
- job: linux_311
  timeoutInMinutes: 180
  pool: {vmImage: 'Ubuntu-22.04'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
    - bash: |
        docker run --rm --privileged docker.io/tonistiigi/binfmt:latest --install all
        python -m pip install dependency-groups
        python -m dependency_groups test | xargs python -m pip install -e.
        if [ "$(Build.SourceBranch)" = "refs/heads/main" ]; then
          echo "INFO: Exporting CIBW_ENABLE=all for main branch test run."
          export CIBW_ENABLE=all
        else
          echo "INFO: CIBW_ENABLE not set for this branch ($(Build.SourceBranch))."
        fi
        python ./bin/run_tests.py

- job: macos_311
  pool: {vmImage: 'macOS-13'}
  timeoutInMinutes: 120
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
    - bash: |
        python -m pip install dependency-groups
        python -m dependency_groups test | xargs python -m pip install -e.
        if [ "$(Build.SourceBranch)" = "refs/heads/main" ]; then
          echo "INFO: Exporting CIBW_ENABLE=all for main branch test run."
          export CIBW_ENABLE=all
        else
          echo "INFO: CIBW_ENABLE not set for this branch ($(Build.SourceBranch))."
        fi
        python ./bin/run_tests.py

- job: windows_311
  pool: {vmImage: 'windows-2019'}
  timeoutInMinutes: 180
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
    - bash: |
        python -m pip install dependency-groups
        python -m dependency_groups test | xargs python -m pip install -e.
        if [ "$(Build.SourceBranch)" = "refs/heads/main" ]; then
          echo "INFO: Exporting CIBW_ENABLE=all for main branch test run."
          export CIBW_ENABLE=all
        else
          echo "INFO: CIBW_ENABLE not set for this branch ($(Build.SourceBranch))."
        fi
        python ./bin/run_tests.py
