language: minimal

branches:
  only:
  - master

jobs:
  include:
    #- name: Linux | x86_64 + i686 | Python 3.6
    #  language: python
    #  python: 3.6
    #  services: docker
    #  env: PYTHON=python

    - name: Linux | arm64 | Python 3.6
      dist: focal
      language: python
      python: 3.6
      services: docker
      arch: arm64
      env: PYTHON=python

    - name: Linux | ppc64le | Python 3.6
      dist: focal
      language: python
      python: 3.6
      services: docker
      arch: ppc64le
      env: PYTHON=python

    #- name: Windows | x86_64 | Python 3.6
    #  os: windows
    #  language: shell
    #  before_install:
    #    - choco upgrade python3 -y --version 3.6.8 --limit-output
    #    # Update root certificates to fix SSL error; see http://www.chawn.com/RootCerts.htm
    #    - powershell "md C:\temp\certs; CertUtil -generateSSTFromWU C:\temp\certs\RootStore.sst; Get-ChildItem -Path C:\\temp\certs\Rootstore.sst | Import-Certificate -CertStoreLocation Cert:\\LocalMachine\\Root\\ | out-null"
    #  env:
    #    - PYTHON=C:\\Python36\\python

    - &linux_s390x_36
      name: Linux | s390x | Python 3.6
      dist: focal
      language: python
      python: 3.6
      services: docker
      arch: s390x
      env: PYTHON=python

  allow_failures:
    # must repeat the s390x job above exactly to match
    - *linux_s390x_36

before_install: |
  df -h
  ls -al ${HOME}/.cache
  ls -al ${HOME}/.cache/pip

install: |
  $PYTHON -m pip install -e ".[dev]" pytest-custom-exit-code
  if [ "$(uname -m)" == "ppc64le" ]; then
    # We need to run a rootless docker daemon due to travis-ci LXD configuration
    # Update docker, c.f. https://developer.ibm.com/components/ibm-power/tutorials/install-docker-on-linux-on-power/
    sudo systemctl stop docker
    sudo apt-get update
    sudo apt-get remove -y docker docker.io containerd runc
    sudo apt-get install -y --no-install-recommends containerd uidmap slirp4netns fuse-overlayfs
    curl -fsSLO https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.6/ubuntu-focal/docker-ce-cli_20.10.6~3-0~ubuntu-focal_ppc64el.deb
    curl -fsSLO https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.6/ubuntu-focal/docker-ce_20.10.6~3-0~ubuntu-focal_ppc64el.deb
    curl -fsSLO https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.6/ubuntu-focal/docker-ce-rootless-extras_20.10.6~3-0~ubuntu-focal_ppc64el.deb
    # prevent the docker service to start upon installation
    echo -e '#!/bin/sh\nexit 101' | sudo tee /usr/sbin/policy-rc.d
    sudo chmod +x /usr/sbin/policy-rc.d
    # install docker
    sudo dpkg -i docker-ce-cli_20.10.6~3-0~ubuntu-focal_ppc64el.deb docker-ce-rootless-extras_20.10.6~3-0~ubuntu-focal_ppc64el.deb docker-ce_20.10.6~3-0~ubuntu-focal_ppc64el.deb
    # "restore" policy-rc.d
    sudo rm -f /usr/sbin/policy-rc.d
    # prepare & start the rootless docker daemon
    dockerd-rootless-setuptool.sh install --force
    export XDG_RUNTIME_DIR=/home/travis/.docker/run
    dockerd-rootless.sh &> /dev/null &
    DOCKERD_ROOTLESS_PID=$!
    echo "${DOCKERD_ROOTLESS_PID}" > ${HOME}/dockerd-rootless.pid
    docker context use rootless
  fi

script: $PYTHON ./bin/run_tests.py

after_script: |
  if [ -f ${HOME}/dockerd-rootless.pid ]; then
    kill -15 $(cat ${HOME}/dockerd-rootless.pid);
  fi
  df -h
